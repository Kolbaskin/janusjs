// Correct Arrays

Array.prototype.sortRand = function() {
    this.sort(function() {
        return (Math.round(Math.random())-0.5); 
    })    
}

Array.prototype.runEach = function(callback) {
    var ar = this
        ,i = 0
        
    var goto = function(x) {
        i += x-1    
    }
        
    var func = function() {
        if(i >= ar.length || !ar[i]) {
            if(!!callback) callback.apply(null, arguments)
            return;
        }        
        var args = []
        for(var j=0;j<arguments.length;j++) args.push(arguments[j])
        
        args.push(func)
        args.push(goto)
    
        ar[i++].apply(null, args)
        
    }    
    func()  
}

Array.prototype.prepEach = function(next, callback) {
    var i = 0, ar = this;
    var f = function() {
        if(i >= ar.length) {
            callback(ar)
            return;
        }
        next(ar[i], function(res) {
            ar[i] = res;
            i++;
            f();
        })
    }
    f()
}


Array.prototype.each = function(func, return_value) {
    if(return_value) {
        for(var i=0;i<this.length;i++) {
            this[i] = func(this[i], i)
        }
    } else {
        for(var i=0;i<this.length;i++) {
            func(this[i], i)
        }
    }
}


String.prototype.hash = function(alg) {
    if(!alg) alg = 'sha1'
    return require('crypto').createHash(alg).update(String(this)).digest('hex')    
}

String.prototype.stripTags = function() {
    return String(this).replace(/(<([^>]+)>)/ig," ")   
}

Function.prototype.about = function(obj) {
    this.aboutObject = obj
    return this
}

JSON.stringifyFormat = function(obj) {
    var str = JSON.stringify(obj)
    var i = 0
        ,out = ""
        ,n = 0
        ,q = false
        ,j
        ,l = str.length;
        
    while(i<l) {
        if(str.charAt(i) == '"') {
            out += '"'
            q = !q
        } else
        if(str.charAt(i) == '{') {
            out += '{\n';
            n++;
            for(j=0;j<n;j++) out += '    '
        } else
        if(str.charAt(i) == '}') {
            out += '\n'
            n--;
            for(j=0;j<n;j++) out += '    '
            out += '}\n';
            for(j=0;j<n;j++) out += '    '
        } else 
        if(str.charAt(i) == ',' && !q) {
            out += ',\n';
            for(j=0;j<n;j++) out += '    '
        } else
            out += str.charAt(i);
        i++;
    }
    return out;
}

Function.prototype.nextCall = function() {
    var a = arguments, me = this;
    setImmediate(function() {
        me.apply(me, a)
    })
}