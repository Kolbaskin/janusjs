
exports.patterns = {
    
    'email': function(val) {
        return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(val);    
    }
    
    ,'string': function(val) {
        return Ext.isString(val);
    }
    
    ,'password': function(val) {
        if(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/.test(val) && val.length>6) return true
        return false;
    }
    
    ,'name': function(val) {
        return /^[a-z0-9а-яА-Я\"\'\.\,_\-«»\s]{2,}$/i.test(val)
    }
    
    ,'phone': function(val) {
        return /^[\,0-9\+\s]{10,}$/;
    }
}


exports.validate = function(pattern, value) {
    if(pattern[1] && !value) return false
    if(Ext.isString(pattern[0])) {
        if(!!this.patterns[pattern[0]]) 
            return this.patterns[pattern[0]](value)  
        
        return (pattern[0] == value)
    }
    return pattern[0].test(value)      
}

exports.validateAll = function(patterns, values) {
    var out = {values:null, errors: null}
    for(var i in values) {
        if(!!patterns[i]) {
            if(!this.validate(patterns[i], values[i])) {
                if(!out.errors) out.errors = {}
                out.errors[i] = values[i]
            } else {
                if(!out.values) out.values = {}
                out.values[i] = values[i]
            } 
        }
    }
    return out
}