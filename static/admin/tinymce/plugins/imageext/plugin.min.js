/**
 * plugin.js
 *
 * Copyright, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*global tinymce:true */

tinymce.callEditorMethod = function(id, elm) {
    var out = []
        ,editor = tinymce.get(id);
    var callback = function(out) {
        if(out && out.length) {
            editor.insertContent(Ext.create('Ext.XTemplate', editor.userCfg.image.tpl).compile().apply({list: out}));
        }
    }
    var upldFile = function(file, cb) {        
        var me = this;
        Core.Ajax.upload(file, '/Admin.Data.uploadImage/'+editor.userCfg.image.width+'x'+editor.userCfg.image.height+'/userimg/', function(data) {
            var o;
            if(data.response && data.response.name) {
                o = {
                    text: "",
                    src: "/userimg/" + data.response.name                    
                }
            }
            cb(o)
        })
    }
    var addNewFile = function(file, cb) {
       var iEdt = Ext.create('Desktop.modules.goe.controller.Goe', {
            //app: me.app,
            resizeCfg: {
                width: editor.userCfg.image.width*2,
                height: editor.userCfg.image.height*2
            }
        })
        iEdt.createWindow().show()
        iEdt.resizeFile(file, function(file) {
            upldFile(file, cb)
        }) 
    }
    var f = function(i) {
        if(i>=elm.files.length) {
            callback(out)
            elm.value = ''
            return;
        }
        addNewFile(elm.files[i], function(ret) {
            if(ret) out.push(ret)
            f(i+1)    
        })
    }
    f(0)
}


tinymce.PluginManager.add('imageext', function(editor) {
    var s = '<div class="mce-widget mce-btn mce-first mce-last" tabindex="-1" aria-label="Insert image" style="width:35px;height: 28px;margin-left:-1px;"><i class="mce-ico mce-i-image" style="position:absolute;margin:5px 0 0 9px;"></i><input type="file" onchange="tinymce.callEditorMethod(\''+editor.id+'\', this)" style="filter: alpha(opacity=0); opacity: 0;width:30px;height: 27px;position:absolute;" multiple="multiple" accept="image/jpeg,image/png,image/gif" /></div>';

    
	editor.addButton('imageext', {
    	icon: false,
		type: 'panel',
        html: s,
		stateSelector: 'img:not([data-mce-object],[data-mce-placeholder])'
	});

/*
	editor.addMenuItem('imageext', {
		icon: 'image',
		text: 'Insert image',
		onclick: createImageList(showDialog),
		context: 'insert',
		prependToContext: true
	});
*/
	//editor.addCommand('mceImageExt', createImageList(showDialog));
});

